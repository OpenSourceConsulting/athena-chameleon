//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0-b52-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.10.05 at 01:53:24 오후 KST 
//


package com.athena.chameleon.engine.entity.xml.application.weblogic.v9_0;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for connection-pool-paramsType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="connection-pool-paramsType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="initial-capacity" type="{http://java.sun.com/xml/ns/j2ee}xsdNonNegativeIntegerType" minOccurs="0"/>
 *         &lt;element name="max-capacity" type="{http://java.sun.com/xml/ns/j2ee}xsdNonNegativeIntegerType" minOccurs="0"/>
 *         &lt;element name="capacity-increment" type="{http://java.sun.com/xml/ns/j2ee}xsdPositiveIntegerType" minOccurs="0"/>
 *         &lt;element name="shrinking-enabled" type="{http://www.bea.com/ns/weblogic/90}true-falseType" minOccurs="0"/>
 *         &lt;element name="shrink-frequency-seconds" type="{http://java.sun.com/xml/ns/j2ee}xsdPositiveIntegerType" minOccurs="0"/>
 *         &lt;element name="highest-num-waiters" type="{http://java.sun.com/xml/ns/j2ee}xsdNonNegativeIntegerType" minOccurs="0"/>
 *         &lt;element name="highest-num-unavailable" type="{http://java.sun.com/xml/ns/j2ee}xsdNonNegativeIntegerType" minOccurs="0"/>
 *         &lt;element name="connection-creation-retry-frequency-seconds" type="{http://java.sun.com/xml/ns/j2ee}xsdIntegerType" minOccurs="0"/>
 *         &lt;element name="connection-reserve-timeout-seconds" type="{http://java.sun.com/xml/ns/j2ee}xsdNonNegativeIntegerType" minOccurs="0"/>
 *         &lt;element name="test-frequency-seconds" type="{http://java.sun.com/xml/ns/j2ee}xsdNonNegativeIntegerType" minOccurs="0"/>
 *         &lt;element name="test-connections-on-create" type="{http://www.bea.com/ns/weblogic/90}true-falseType" minOccurs="0"/>
 *         &lt;element name="test-connections-on-release" type="{http://www.bea.com/ns/weblogic/90}true-falseType" minOccurs="0"/>
 *         &lt;element name="test-connections-on-reserve" type="{http://www.bea.com/ns/weblogic/90}true-falseType" minOccurs="0"/>
 *         &lt;element name="profile-harvest-frequency-seconds" type="{http://java.sun.com/xml/ns/j2ee}xsdNonNegativeIntegerType" minOccurs="0"/>
 *         &lt;element name="ignore-in-use-connections-enabled" type="{http://www.bea.com/ns/weblogic/90}true-falseType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "connection-pool-paramsType", propOrder = {
    "initialCapacity",
    "maxCapacity",
    "capacityIncrement",
    "shrinkingEnabled",
    "shrinkFrequencySeconds",
    "highestNumWaiters",
    "highestNumUnavailable",
    "connectionCreationRetryFrequencySeconds",
    "connectionReserveTimeoutSeconds",
    "testFrequencySeconds",
    "testConnectionsOnCreate",
    "testConnectionsOnRelease",
    "testConnectionsOnReserve",
    "profileHarvestFrequencySeconds",
    "ignoreInUseConnectionsEnabled"
})
public class ConnectionPoolParamsType {

    @XmlElement(name = "initial-capacity", namespace = "http://www.bea.com/ns/weblogic/90")
    protected XsdNonNegativeIntegerType initialCapacity;
    @XmlElement(name = "max-capacity", namespace = "http://www.bea.com/ns/weblogic/90")
    protected XsdNonNegativeIntegerType maxCapacity;
    @XmlElement(name = "capacity-increment", namespace = "http://www.bea.com/ns/weblogic/90")
    protected XsdPositiveIntegerType capacityIncrement;
    @XmlElement(name = "shrinking-enabled", namespace = "http://www.bea.com/ns/weblogic/90")
    protected TrueFalseType shrinkingEnabled;
    @XmlElement(name = "shrink-frequency-seconds", namespace = "http://www.bea.com/ns/weblogic/90")
    protected XsdPositiveIntegerType shrinkFrequencySeconds;
    @XmlElement(name = "highest-num-waiters", namespace = "http://www.bea.com/ns/weblogic/90")
    protected XsdNonNegativeIntegerType highestNumWaiters;
    @XmlElement(name = "highest-num-unavailable", namespace = "http://www.bea.com/ns/weblogic/90")
    protected XsdNonNegativeIntegerType highestNumUnavailable;
    @XmlElement(name = "connection-creation-retry-frequency-seconds", namespace = "http://www.bea.com/ns/weblogic/90")
    protected XsdIntegerType connectionCreationRetryFrequencySeconds;
    @XmlElement(name = "connection-reserve-timeout-seconds", namespace = "http://www.bea.com/ns/weblogic/90")
    protected XsdNonNegativeIntegerType connectionReserveTimeoutSeconds;
    @XmlElement(name = "test-frequency-seconds", namespace = "http://www.bea.com/ns/weblogic/90")
    protected XsdNonNegativeIntegerType testFrequencySeconds;
    @XmlElement(name = "test-connections-on-create", namespace = "http://www.bea.com/ns/weblogic/90")
    protected TrueFalseType testConnectionsOnCreate;
    @XmlElement(name = "test-connections-on-release", namespace = "http://www.bea.com/ns/weblogic/90")
    protected TrueFalseType testConnectionsOnRelease;
    @XmlElement(name = "test-connections-on-reserve", namespace = "http://www.bea.com/ns/weblogic/90")
    protected TrueFalseType testConnectionsOnReserve;
    @XmlElement(name = "profile-harvest-frequency-seconds", namespace = "http://www.bea.com/ns/weblogic/90")
    protected XsdNonNegativeIntegerType profileHarvestFrequencySeconds;
    @XmlElement(name = "ignore-in-use-connections-enabled", namespace = "http://www.bea.com/ns/weblogic/90")
    protected TrueFalseType ignoreInUseConnectionsEnabled;
    @XmlAttribute
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    protected java.lang.String id;

    /**
     * Gets the value of the initialCapacity property.
     * 
     * @return
     *     possible object is
     *     {@link XsdNonNegativeIntegerType }
     *     
     */
    public XsdNonNegativeIntegerType getInitialCapacity() {
        return initialCapacity;
    }

    /**
     * Sets the value of the initialCapacity property.
     * 
     * @param value
     *     allowed object is
     *     {@link XsdNonNegativeIntegerType }
     *     
     */
    public void setInitialCapacity(XsdNonNegativeIntegerType value) {
        this.initialCapacity = value;
    }

    /**
     * Gets the value of the maxCapacity property.
     * 
     * @return
     *     possible object is
     *     {@link XsdNonNegativeIntegerType }
     *     
     */
    public XsdNonNegativeIntegerType getMaxCapacity() {
        return maxCapacity;
    }

    /**
     * Sets the value of the maxCapacity property.
     * 
     * @param value
     *     allowed object is
     *     {@link XsdNonNegativeIntegerType }
     *     
     */
    public void setMaxCapacity(XsdNonNegativeIntegerType value) {
        this.maxCapacity = value;
    }

    /**
     * Gets the value of the capacityIncrement property.
     * 
     * @return
     *     possible object is
     *     {@link XsdPositiveIntegerType }
     *     
     */
    public XsdPositiveIntegerType getCapacityIncrement() {
        return capacityIncrement;
    }

    /**
     * Sets the value of the capacityIncrement property.
     * 
     * @param value
     *     allowed object is
     *     {@link XsdPositiveIntegerType }
     *     
     */
    public void setCapacityIncrement(XsdPositiveIntegerType value) {
        this.capacityIncrement = value;
    }

    /**
     * Gets the value of the shrinkingEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link TrueFalseType }
     *     
     */
    public TrueFalseType getShrinkingEnabled() {
        return shrinkingEnabled;
    }

    /**
     * Sets the value of the shrinkingEnabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrueFalseType }
     *     
     */
    public void setShrinkingEnabled(TrueFalseType value) {
        this.shrinkingEnabled = value;
    }

    /**
     * Gets the value of the shrinkFrequencySeconds property.
     * 
     * @return
     *     possible object is
     *     {@link XsdPositiveIntegerType }
     *     
     */
    public XsdPositiveIntegerType getShrinkFrequencySeconds() {
        return shrinkFrequencySeconds;
    }

    /**
     * Sets the value of the shrinkFrequencySeconds property.
     * 
     * @param value
     *     allowed object is
     *     {@link XsdPositiveIntegerType }
     *     
     */
    public void setShrinkFrequencySeconds(XsdPositiveIntegerType value) {
        this.shrinkFrequencySeconds = value;
    }

    /**
     * Gets the value of the highestNumWaiters property.
     * 
     * @return
     *     possible object is
     *     {@link XsdNonNegativeIntegerType }
     *     
     */
    public XsdNonNegativeIntegerType getHighestNumWaiters() {
        return highestNumWaiters;
    }

    /**
     * Sets the value of the highestNumWaiters property.
     * 
     * @param value
     *     allowed object is
     *     {@link XsdNonNegativeIntegerType }
     *     
     */
    public void setHighestNumWaiters(XsdNonNegativeIntegerType value) {
        this.highestNumWaiters = value;
    }

    /**
     * Gets the value of the highestNumUnavailable property.
     * 
     * @return
     *     possible object is
     *     {@link XsdNonNegativeIntegerType }
     *     
     */
    public XsdNonNegativeIntegerType getHighestNumUnavailable() {
        return highestNumUnavailable;
    }

    /**
     * Sets the value of the highestNumUnavailable property.
     * 
     * @param value
     *     allowed object is
     *     {@link XsdNonNegativeIntegerType }
     *     
     */
    public void setHighestNumUnavailable(XsdNonNegativeIntegerType value) {
        this.highestNumUnavailable = value;
    }

    /**
     * Gets the value of the connectionCreationRetryFrequencySeconds property.
     * 
     * @return
     *     possible object is
     *     {@link XsdIntegerType }
     *     
     */
    public XsdIntegerType getConnectionCreationRetryFrequencySeconds() {
        return connectionCreationRetryFrequencySeconds;
    }

    /**
     * Sets the value of the connectionCreationRetryFrequencySeconds property.
     * 
     * @param value
     *     allowed object is
     *     {@link XsdIntegerType }
     *     
     */
    public void setConnectionCreationRetryFrequencySeconds(XsdIntegerType value) {
        this.connectionCreationRetryFrequencySeconds = value;
    }

    /**
     * Gets the value of the connectionReserveTimeoutSeconds property.
     * 
     * @return
     *     possible object is
     *     {@link XsdNonNegativeIntegerType }
     *     
     */
    public XsdNonNegativeIntegerType getConnectionReserveTimeoutSeconds() {
        return connectionReserveTimeoutSeconds;
    }

    /**
     * Sets the value of the connectionReserveTimeoutSeconds property.
     * 
     * @param value
     *     allowed object is
     *     {@link XsdNonNegativeIntegerType }
     *     
     */
    public void setConnectionReserveTimeoutSeconds(XsdNonNegativeIntegerType value) {
        this.connectionReserveTimeoutSeconds = value;
    }

    /**
     * Gets the value of the testFrequencySeconds property.
     * 
     * @return
     *     possible object is
     *     {@link XsdNonNegativeIntegerType }
     *     
     */
    public XsdNonNegativeIntegerType getTestFrequencySeconds() {
        return testFrequencySeconds;
    }

    /**
     * Sets the value of the testFrequencySeconds property.
     * 
     * @param value
     *     allowed object is
     *     {@link XsdNonNegativeIntegerType }
     *     
     */
    public void setTestFrequencySeconds(XsdNonNegativeIntegerType value) {
        this.testFrequencySeconds = value;
    }

    /**
     * Gets the value of the testConnectionsOnCreate property.
     * 
     * @return
     *     possible object is
     *     {@link TrueFalseType }
     *     
     */
    public TrueFalseType getTestConnectionsOnCreate() {
        return testConnectionsOnCreate;
    }

    /**
     * Sets the value of the testConnectionsOnCreate property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrueFalseType }
     *     
     */
    public void setTestConnectionsOnCreate(TrueFalseType value) {
        this.testConnectionsOnCreate = value;
    }

    /**
     * Gets the value of the testConnectionsOnRelease property.
     * 
     * @return
     *     possible object is
     *     {@link TrueFalseType }
     *     
     */
    public TrueFalseType getTestConnectionsOnRelease() {
        return testConnectionsOnRelease;
    }

    /**
     * Sets the value of the testConnectionsOnRelease property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrueFalseType }
     *     
     */
    public void setTestConnectionsOnRelease(TrueFalseType value) {
        this.testConnectionsOnRelease = value;
    }

    /**
     * Gets the value of the testConnectionsOnReserve property.
     * 
     * @return
     *     possible object is
     *     {@link TrueFalseType }
     *     
     */
    public TrueFalseType getTestConnectionsOnReserve() {
        return testConnectionsOnReserve;
    }

    /**
     * Sets the value of the testConnectionsOnReserve property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrueFalseType }
     *     
     */
    public void setTestConnectionsOnReserve(TrueFalseType value) {
        this.testConnectionsOnReserve = value;
    }

    /**
     * Gets the value of the profileHarvestFrequencySeconds property.
     * 
     * @return
     *     possible object is
     *     {@link XsdNonNegativeIntegerType }
     *     
     */
    public XsdNonNegativeIntegerType getProfileHarvestFrequencySeconds() {
        return profileHarvestFrequencySeconds;
    }

    /**
     * Sets the value of the profileHarvestFrequencySeconds property.
     * 
     * @param value
     *     allowed object is
     *     {@link XsdNonNegativeIntegerType }
     *     
     */
    public void setProfileHarvestFrequencySeconds(XsdNonNegativeIntegerType value) {
        this.profileHarvestFrequencySeconds = value;
    }

    /**
     * Gets the value of the ignoreInUseConnectionsEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link TrueFalseType }
     *     
     */
    public TrueFalseType getIgnoreInUseConnectionsEnabled() {
        return ignoreInUseConnectionsEnabled;
    }

    /**
     * Sets the value of the ignoreInUseConnectionsEnabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link TrueFalseType }
     *     
     */
    public void setIgnoreInUseConnectionsEnabled(TrueFalseType value) {
        this.ignoreInUseConnectionsEnabled = value;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String }
     *     
     */
    public java.lang.String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String }
     *     
     */
    public void setId(java.lang.String value) {
        this.id = value;
    }

}
