//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.09.04 at 12:32:21 오후 KST 
//


package com.athena.chameleon.engine.entity.xml.jeusejbdd.v5_0;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for sigKeyIdentifierType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="sigKeyIdentifierType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="IssuerSerial"/>
 *     &lt;enumeration value="DirectReference"/>
 *     &lt;enumeration value="SKIKeyIdentifier"/>
 *     &lt;enumeration value="X509KeyIdentifier"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "sigKeyIdentifierType")
@XmlEnum
public enum SigKeyIdentifierType {


    /**
     * 
     * 						[Description]: X509 인증서의 발급 번호를 메시지에 포함하여 서명을 검증하기 위한 인증서를 지정한다.
     * 					
     * 
     */
    @XmlEnumValue("IssuerSerial")
    ISSUER_SERIAL("IssuerSerial"),

    /**
     * 
     * 						[Description]: X509 인증서를 메시지에 포함하고 그것을 메시지 내부에서 참조하는 방식이다.
     * 					
     * 
     */
    @XmlEnumValue("DirectReference")
    DIRECT_REFERENCE("DirectReference"),

    /**
     * 
     * 						[Description]: Subject Key Idenfication 방식이다. X509 인증서의 버전이 3 이상이어야 한다.
     * 					
     * 
     */
    @XmlEnumValue("SKIKeyIdentifier")
    SKI_KEY_IDENTIFIER("SKIKeyIdentifier"),

    /**
     * 
     * 						[Description]: 메시지에 X509 인증서를 포함하고 서명 검증을 위해 사용하도록 한다.
     * 					
     * 
     */
    @XmlEnumValue("X509KeyIdentifier")
    X_509_KEY_IDENTIFIER("X509KeyIdentifier");
    private final String value;

    SigKeyIdentifierType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SigKeyIdentifierType fromValue(String v) {
        for (SigKeyIdentifierType c: SigKeyIdentifierType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
