<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter>
<chapter title="JBoss FAQ">
	<text>본 장에서는 JBoss의 일반적인 설정에 대한 내용을 기술하여 마이그레이션시 도움이 될 수 있도록 합니다. 인터넷으로 찾아보거나 다른 마이그레이션 프로젝트에서 발생했던 빈번한 문제를 본 장에서 기술합니다.</text>
	<section title ="JBoss는 무엇인가?">
		<text>1999년,  프랑스의 엔지니어였던 마크 플러리(Marc Fleury)는 JBoss 라는 이름의 작은 오픈 소스 프로젝트를 시작했다. 그 프로젝트는 J2EE 명세서의 Enterprise Java Bean (EJB) 부분에 대한 구현을 제공하기 위한 것이었는데, 이 프로젝트가 점차 유명해짐에 따라 커뮤니티의 개발자들은 프로젝트 관련 문서, 컨설팅 서비스, 교육 서비스를 판매하기 시작했다. 

			2001년 플러리와 동료들은 JBoss Group, LLC 라는 법인을 설립하고, 2002년부터는 개발자 지원을 제공하기 시작했다. 이 일이 진행되는 동시에 그들은 JBoss AS 3를 개발하였는데, 모든 Java EE스펙을 갖춘JBoss의 최초 버전이었다. 이는 IBM의 웹 스피어나 당시 BEA의 웹로직과 같은 다른 독점 애플리케이션 서버와 경쟁할 수 있는 수준의 것이다. 
		</text>
		<textR>NOTE. 프로젝트의 이름은 원래 EJBoss (Enterprise Java Bean Open Source Software)였다.  
			하지만, Sun이 자신들이 보유중인, EJB 상표를 사용하는 것을 좋아하지 않았기 때문에, 
			프로젝트 명에서 E(Enterprise) 글자가 빠져 JBoss 라는 이름이 되었다.</textR>
		<text>JBoss Group LLC 는 2004년에 JBoss, Inc 로 사명을 변경하고, JBoss AS 4를 출시하면서 기업들을 위한 제품 지원 서비스를 제공하기 시작하였다. JBoss AS 4는 매우 유명한 애플리케이션 서버로 성장하였고, 여전히 업계에서 널리 사용되고 있다. JBoss Cache, Hibernate, jBPM, JBoss Rules 같은 JBoss AS 내에서 동작하는 많은 컴포넌트들이 JBoss AS 외부에서 독립적으로 동작할 수 있다.

			하지만 국내에서는 오픈 소스라는 이유로 고객들이 가진 오해 – 보안에 약하다. 성능이 떨어진다 –를 극복하지 못하고 저조한 판매율을 보여오다 2011년 하반기부터  많은 국내 레퍼런스가 생기기 시작했다.
		</text>
	</section>
	<section title="DataSource 설정은 어떻게 하나요?">
		<text>데이터 소스에 대한 샘플 파일은 JBoss의 설치 디렉토리 하위의 $JBOSS_HOME/jboss-as/docs/examples/jca 디렉토리에 포함되어 있습니다. 
			데이터 소스는 *-ds.xml이라는 네이밍 규칙을 이용하여 JBoss가 자동으로 로드하게 되어 있습니다. 따라서 mysql-ds.xml 파일을 이용하여 설정하게 될 경우 mysql 관련 설정을 해당 파일에 해야 합니다.
			 
			아래의 예제는 oracle datasource를 설정하는 예제입니다.
		</text>
		<box><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
					<datasources>
					  <local-tx-datasource>
					    <jndi-name>BmsDataSource</jndi-name>
					    <use-java-context>false</use-java-context>
					
					    <connection-url>jdbc:oracle:thin:@127.0.0.1:1521:DBNAME</connection-url>
					    <driver-class>oracle.jdbc.driver.OracleDriver</driver-class>
					
					    <user-name>onsadmin</user-name>
					    <password>onsadmin</password>
					
					    <min-pool-size>10</min-pool-size>
					    <max-pool-size>250</max-pool-size>
					
					    <share-prepared-statements>true</share-prepared-statements>
					    <prepared-statement-cache-size>500</prepared-statement-cache-size>
					
					    <set-tx-query-timeout>true</set-tx-query-timeout>
					    <query-timeout>300</query-timeout>
					
					    <valid-connection-checker-class-name>org.jboss.resource.adapter.jdbc.vendor.OracleValidConnectionChecker</valid-connection-checker-class-name>
					    <exception-sorter-class-name>org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter</exception-sorter-class-name>
					
					        <new-connection-sql>select 1 from dual</new-connection-sql>
					        <check-valid-connection-sql>select 1 from dual</check-valid-connection-sql>
					
					      <!-- corresponding type-mapping in the standardjbosscmp-jdbc.xml (optional) -->
					      <metadata>
					         <type-mapping>Oracle9i</type-mapping>
					      </metadata>
					  </local-tx-datasource>
					</datasources>
				]]>
		</box>
		<text>위에서 사용하는 드라이버를 인스턴스 홈의 lib 디렉토리에 복사하여 사용하도록 합니다.</text>
	</section>
	<section title="클러스터를 사용하기 위한 web.xml의 설정은 무엇입니까?">
		<text>웹 애플리케이션 클러스터링을 사용하기 위해서는 all 서버를 일반적으로 사용하게 됩니다. 이 때 디플로이 되는 애플리케이션의 설정에는 다음의 항목이 web.xml 파일에 기술되어 있어야 합니다.</text>
		<box option="other"><text type="default"><![CDATA[<?xml version="1.0"?>
				<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">
				
				<web-app>
			]]>	</text>
				<text type="red"><![CDATA[    <distributable/> ]]>	
				</text>
				<text type="default"><![CDATA[
				    <!-- Encoding Filter Configuration -->
				    <filter>
				        <filter-name>requestEncodingFilter</filter-name>
				        <filter-class>gov.bms.common.util.RequestEncodingFilter</filter-class>
				        <init-param>
				            <param-name>encoding</param-name>
				            <param-value>EUC-KR</param-value>
				        </init-param>
				    </filter>
				…
				중략
				]]>
				</text>
		</box>
	</section>
	<section title="EJB 표준 스펙이 맞지 않아 JBoss 에러([org.jboss.ejb.EJBDeployer.verifier] EJB spec violation)가 납니다.">
		<text>JBoss는 EJB의 표준 준수 여부를 철저하게 분석합니다. 이를 해결하기 위해서는 소스의 부분을 고쳐야 합니다. 하지만 JBoss EJB 디플로이어 속성을 변경하여 해당 오류를 벗어나도록 합니다.
			$SERVER_HOME/deployers/ejb-deployer-jboss-beans.xml 부분의 아래를 바꿉니다.
		</text>
		<box option="other"><text type="default"><![CDATA[.. 중략
				<property name="verifyDeployments">true</property>
				
				       <!-- A flag indicating if the verifier should be verbose about its operation -->
				       <property name="verifierVerbose">true</property>
				
				       <!-- Setting this to 'true' will cause all deployments
				       to fail when the Verifier detected a problem with the contained
				       Beans. If false, warnings/errors will be logged but the deployment
				       will not fail.
				       -->
				]]></text>	
				<text type="red"><![CDATA[       <property name="strictVerifier">false</property>
				]]>	
				</text>
		</box>
	</section>
	<section title="EAR 리소스 파일들이 로딩이 되지 않습니다.">
		<text>APP-INF/classes 디렉토리의 설정파일들을 읽어들이도록 코딩되어 있지만, 실제로 “/” 로 시작하는 경로에서 읽어들이도록 설정되어 있기 때문에 설정 변경이 필요합니다.
			또, 클래스 패스에서 파일을 읽어들이기 위해서는 아래와 같이 코딩 변경이 필요합니다
		</text>
		<boxW>// is = getClass().getResourceAsStream(propFile);
    		is = getClass().getClassLoader().getResourceAsStream(propFile);
    		 
		</boxW>
	</section>
	<section title="JBoss 인코딩 설정은 어디서 변경합니까?">
		<text>아래 server.xml 파일에 URIEncoding=”UTF-8”을 추가합니다.

			deploy/jboss-web.deployer/server.xml
		</text>
		<box option="other"><text type="default"><![CDATA[<Connector port="8080" address="${jboss.bind.address}"    
		         maxThreads="250" maxHttpHeaderSize="8192"
		         emptySessionPath="true" protocol="HTTP/1.1"
		         enableLookups="false" redirectPort="8443" acceptCount="100"
		         connectionTimeout="20000" disableUploadTimeout="true"
				]]>	</text>
				<text type="red">         URIEncoding="UTF-8"</text>
				<text type="default"><![CDATA[/>
				    <!-- Define an AJP 1.3 Connector on port 8009 -->
				    <Connector port="8009" address="${jboss.bind.address}" protocol="AJP/1.3"
				         emptySessionPath="true" enableLookups="false" redirectPort="8443" 
				]]></text>
				<text type="red">         URIEncoding="UTF-8"</text>
				<text type="default"><![CDATA[ />
				]]>	
				</text>
		</box>
	</section>
	<section title="JSP 페이지가 64K를 초과하여 에러가 발생합니다.">
		<text>“The code of method _jspService(HttpServletRequest, HttpServletResponse) is exceeding the 65535 bytes limit”

			이 문제는 사이즈가 매우 큰 JSP 파일에서 생성되는 Java 메소드의 크기가 64KB을 넘어서 발생하는 문제로, JVM에서 64KB 가 넘는 메소드를 사용할 수 없어 발생합니다. 아래와 같이 많은 이슈들이 제기되었지만 JVM에서 해결되어야 하는 문제입니다. JVM 스펙의 제한점 때문입니다.
			
			https://issues.apache.org/bugzilla/show_bug.cgi?id=39309
			https://issues.apache.org/bugzilla/show_bug.cgi?id=39089
			http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6294277
		</text>
		<boxW><![CDATA[4.10 Limitations of the Java Virtual Machine and class File Format
					* The following limitations in the Java Virtual Machine are imposed by this version of the Java Virtual Machine specification: 
					* The per-class constant pool is limited to 65535 entries by the 16-bit constant_pool_count field of the ClassFile structure (§4.1). This acts as an internal limit on the total complexity of a single class. 
					* The amount of code per method is limited to 65535 bytes by the sizes of the indices in the exception_table of the Code attribute (§4.7.4), in the LineNumberTable attribute (§4.7.6), and in the LocalVariableTable attribute (§4.7.7).
				]]>	
		</boxW>
		<text><![CDATA[해결할 수 있는 방법은 JSP 파일의 크기를 줄이는 방법으로 다음과 같이 <jsp:include>를 사용하여야 한다.]]></text>
		<boxW><![CDATA[<jsp:include page="URI" flush="true"/>
				]]>	
		</boxW>
		<text><![CDATA[@include는 JSP파일을 하나로 합쳐 하나의 Java 파일을 생성하여 컴파일하지만, <jsp:include>의 경우에는 각각의 JSP 파일을 따로 컴파일하고 출력 결과만 합쳐서 출력하게 됩니다.]]></text>		
	</section>
</chapter>
